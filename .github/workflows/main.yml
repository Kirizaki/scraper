name: Run Scraper

on:
  schedule:
    - cron: '0 * * * *'  # co godzinÄ™
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run-scraper:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run scraper
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # git config --global user.name 'github-actions'
          # git config --global user.email 'actions@github.com'

          python main.py
          git add *.csv
          git commit -m "backup results"
          git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }} HEAD:backups

      - name: Generate HTML
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # git config --global user.name 'github-actions'
          # git config --global user.email 'actions@github.com'

          python generate_html.py

          # git pull --rebase
          # if [ -f "wyniki.html" ]; then git add wyniki.html; fi
          # git commit -m "Update HTML" || echo "No changes to commit"
          # git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }} HEAD:gh-pages

      - name: Commit CSV
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'actions@github.com'

          # # Pobierz najnowsze zmiany z repozytorium
          # git fetch origin main
          # git checkout main
          # git pull --rebase origin main

          # Dodaj pliki CSV oraz flagÄ™ (jeÅ›li istniejÄ…)
          if [ -f "wyniki.csv" ]; then git add wyniki.csv; fi
          if [ -f "prev_oferty.csv" ]; then git add prev_oferty.csv; fi
          if [ -f "notify.flag" ]; then git add notify.flag; fi

          # ZrÃ³b commit, jeÅ›li coÅ› zostaÅ‚o dodane
          git commit -m "Update CSV" || echo "No changes to commit"

          # Pushuj zmiany przy uÅ¼yciu tokena
          git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }} HEAD:main

      - name: Check for new offers
        id: check_notify
        run: |
          if [ -f notify.flag ]; then
            FLAG=$(cat notify.flag)
          else
            FLAG="no"
          fi
          echo "notify=$FLAG" >> $GITHUB_OUTPUT

      - name: Send WhatsApp notify if new offers found
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_FROM: ${{ secrets.TWILIO_FROM_NUMBER }}
          TWILIO_TO_ONE: ${{ secrets.TWILIO_TO_NUMBER_ONE }}
          TWILIO_TO_TWO: ${{ secrets.TWILIO_TO_NUMBER_TWO }}
        run: |
          if [ -f notify.flag ]; then
            FLAG=$(cat notify.flag)
            if [ "$FLAG" == "yes" ]; then
              echo "Nowe oferty znalezione!"
              curl -X POST https://api.twilio.com/2010-04-01/Accounts/$TWILIO_ACCOUNT_SID/Messages.json \
                --data-urlencode "From=whatsapp:$TWILIO_FROM" \
                --data-urlencode "To=whatsapp:$TWILIO_TO_ONE" \
                --data-urlencode "Body=ðŸ“¢ Nowe oferty: https://kirizaki.github.io/scraper/wyniki.html" \
                -u "$TWILIO_ACCOUNT_SID:$TWILIO_AUTH_TOKEN"

              curl -X GET https://api.twilio.com/2010-04-01/Accounts/$TWILIO_ACCOUNT_SID/Messages/SM6b411ffd8bc4b19b8d29568064cd439b.json \
                  -u "$TWILIO_ACCOUNT_SID:$TWILIO_AUTH_TOKEN"

              curl -X POST https://api.twilio.com/2010-04-01/Accounts/$TWILIO_ACCOUNT_SID/Messages.json \
                --data-urlencode "From=whatsapp:$TWILIO_FROM" \
                --data-urlencode "To=whatsapp:$TWILIO_TO_TWO" \
                --data-urlencode "Body=ðŸ“¢ Nowe oferty: https://kirizaki.github.io/scraper/wyniki.html" \
                -u "$TWILIO_ACCOUNT_SID:$TWILIO_AUTH_TOKEN"

              curl -X GET https://api.twilio.com/2010-04-01/Accounts/$TWILIO_ACCOUNT_SID/Messages/SM6b411ffd8bc4b19b8d29568064cd439b.json \
                  -u "$TWILIO_ACCOUNT_SID:$TWILIO_AUTH_TOKEN"
            fi
          fi
