name: Run Scraper

on:
  schedule:
    - cron: '0 */2 * * *'  # co 2 godziny
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run-scraper:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run scraper
        run: python main.py

      - name: Commit CSV
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'actions@github.com'

          # Pobierz najnowsze zmiany z zdalnej gaÅ‚Ä™zi
          git fetch origin main
          git checkout main
          git pull --rebase origin main

          # Dodaj pliki CSV oraz flagÄ™ (jeÅ›li istniejÄ…)
          if [ -f "wyniki.csv" ]; then git add wyniki.csv; fi
          if [ -f "prev_oferty.csv" ]; then git add prev_oferty.csv; fi
          if [ -f "notify.flag" ]; then git add notify.flag; fi

          # ZrÃ³b commit, jeÅ›li coÅ› zostaÅ‚o dodane
          git commit -m "Update CSV" || echo "No changes to commit"

          # Pushuj zmiany przy uÅ¼yciu tokena
          git push https://x-access-token:${TOKEN}@github.com/${{ github.repository }} HEAD:main

      - name: Check if notify.flag exists
        id: check_notify
        run: |
          if [ -f notify.flag ]; then
            echo "notify=yes" >> $GITHUB_OUTPUT
          else
            echo "notify=no" >> $GITHUB_OUTPUT
          fi

      - name: Send SMS if new offers found
        if: steps.check_notify.outputs.notify == 'yes'
        env:
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_FROM: ${{ secrets.TWILIO_FROM_NUMBER }}
          TWILIO_TO: ${{ secrets.TWILIO_TO_NUMBER }}
        run: |
          curl -X POST https://api.twilio.com/2010-04-01/Accounts/$TWILIO_ACCOUNT_SID/Messages.json \
            --data-urlencode "Body=ðŸ“¢ Nowe oferty: https://raw.githubusercontent.com/Kirizaki/scraper/main/wyniki.csv" \
            --data-urlencode "From=$TWILIO_FROM" \
            --data-urlencode "To=$TWILIO_TO" \
            -u "$TWILIO_ACCOUNT_SID:$TWILIO_AUTH_TOKEN"
